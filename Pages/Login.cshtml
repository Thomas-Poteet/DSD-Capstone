@page
@model LoginModel
@{
    ViewData["Title"] = "Login";
}
<!DOCTYPE html>
<html>

<head>
    <style>
        body {
            background-color: #73a8ee;
            /* Blue background */
            color: white;
            /* White text color for contrast */
        }
    </style>
</head>

<body>
    <div class="container-fluid vh-100 d-flex flex-column justify-content-center">
        <!-- Title Image -->
        <div class="row justify-content-center mb-5">
            <div class="col-lg-6 col-md-8 col-sm-10">
                <img src="~/images/Scenic Foods Banner.PNG" class="w-100 h-auto" alt="DSD Logo">
            </div>
        </div>
        <!-- Login Card -->
        <div class="row justify-content-center">
            <div class="col-lg-4 col-md-6 col-sm-8">
                <div id="divLogin" class="card text-black">
                    <div class="card-header text-center">
                        <h3>DSD System</h3>
                    </div>
                    <div class="card-body">
                        <form>
                            @Html.AntiForgeryToken()
                            <label for="txtUsername" class="form-label">Username</label>
                            <input type="text" id="txtUsername" class="form-control" placeholder="Username"
                                autocomplete="username" list="dlUsernames" required>
                            <datalist id="dlUsernames">
                                @foreach (var username in Model.Usernames)
                                {
                                    <option value="@username"></option>
                                }
                            </datalist>

                            <label for="txtPassword" class="form-label">Password</label>
                            <input id="txtPassword" type="password" class="form-control" placeholder="Password"
                                autocomplete="current-password" required>

                            <button id="btnLogin" type="button" class="btn btn-secondary col-12 mt-3">Login</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @section Scripts {
        <script>
            // Login button click event
            $("#btnLogin").click(function () {
                // Get the username and password
                const strUsername = $("#txtUsername").val();
                const strPassword = $("#txtPassword").val();

                if (!strUsername) {
                    Swal.fire({
                        heightAuto: false,
                        icon: 'error',
                        title: 'Please enter a username',
                        showConfirmButton: false,
                        timer: 1000
                    });
                    return;
                }
                else {
                    $.ajax({
                        url: `/Employees/${strUsername}`,
                        method: 'GET',
                        success: function (data) {
                            if (data.password == strPassword) {
                                // calls the OnPostAsync method in Login.cshtml.cs
                                $.ajax({
                                    url: '/Login',
                                    method: 'POST',
                                    data: { Username: strUsername },
                                    headers: {
                                        RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                                    },
                                    success: function (response) {
                                        if (response.success) {
                                            window.location.href = "/Dashboard";
                                        } else {
                                            Swal.fire({
                                                heightAuto: false,
                                                icon: 'error',
                                                title: 'Failed to create session',
                                                showConfirmButton: false,
                                                timer: 1000
                                            });
                                        }
                                    },
                                    error: function () {
                                        Swal.fire({
                                            heightAuto: false,
                                            icon: 'error',
                                            title: 'Error creating session',
                                            showConfirmButton: false,
                                            timer: 1000
                                        });
                                    }
                                });
                            } else {
                                Swal.fire({
                                    heightAuto: false,
                                    icon: 'error',
                                    title: 'Invalid admin password',
                                    showConfirmButton: false,
                                    timer: 1000
                                });
                            }
                        },
                        error: function () {
                            Swal.fire({
                                heightAuto: false,
                                icon: 'error',
                                title: 'User not found',
                                showConfirmButton: false,
                                timer: 1000
                            });
                        }
                    });
                }
            });
        </script>
    }
</body>

</html>
